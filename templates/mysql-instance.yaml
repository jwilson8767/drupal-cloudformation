AWSTemplateFormatVersion: '2010-09-09'
Description: 'A MySQL RDS instance which can be used by other stacks'
Parameters:
  AdminPassword: 
    Type: String
    Description: 'The database admin account password. Remember to save this.'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: 'Must contain only alphanumeric characters.'
    MaxLength: '41'
    MinLength: '8'
    NoEcho: 'true'
  AdminUsername:
    Type: String
    Description: 'The database admin account username'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: 'Must begin with a letter and contain only alphanumeric characters.'
    Default: admin
    MaxLength: '16'
    MinLength: '1'
    NoEcho: 'true'
  AllocatedStorage:
    Type: Number
    Description: 'Storage for the RDS instance in GB'
    MaxValue: 6144
    MinValue: 5
    Default: 10
  InstanceType:
    Type: String
    AllowedValues: ['db.t2.micro', 'db.t2.small', 'db.t2.medium', 'db.t2.large']
    Default: 'db.t2.micro'
    Description: 'Choose an RDS instance size. Default: db.t2.micro.'
  MySQLPort:
    Type: Number
    Default: 3306
  MySQLVersion:
    Type: String
    Description: 'Use `aws rds describe-db-engine-versions --engine=mysql --region=REGION` to see all versions'
    AllowedValues: ['5.6.19a', '5.6.19b', '5.6.21', '5.6.21b', '5.6.22', '5.6.23', '5.6.27', '5.6.29', '5.6.34', '5.7.10', '5.7.11', '5.7.16']
    Default: '5.6.34'
Resources:
  RDSInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ''
      SecurityGroupEgress:
      - {CidrIp: 0.0.0.0/0, IpProtocol: '-1'}
      SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        IpProtocol: 'tcp'
        FromPort: !Ref 'MySQLPort'
        ToPort: !Ref 'MySQLPort'
      Tags:
      - Key: Name
        Value: !Sub 'cfn-rds-${AWS::StackName}'
      VpcId: !ImportValue 'cfn-region-VpcId'
  EncryptedAdminPassword:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      KMSKeyARN: !ImportValue 'KMSKeyArn'
      Plaintext: !Ref 'AdminPassword'
      ServiceToken: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:cfn-encryptedvalue'
    Version: '1.0'
  RDSInstance:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    DependsOn: [ 'RDSInstanceSecurityGroup' ]
    Properties:
      AllocatedStorage: !Ref 'AllocatedStorage'
      AutoMinorVersionUpgrade: true
      DBInstanceClass: !Ref 'InstanceType'
      DBSubnetGroupName: !ImportValue 'cfn-region-RDSSubnetGroup'
      Engine: MySQL
      EngineVersion: !Ref 'MySQLVersion'
      MasterUserPassword: !Ref 'AdminPassword'
      MasterUsername: !Ref 'AdminUsername'
      MultiAZ: true
      Port: !Ref 'MySQLPort'
      PubliclyAccessible: true #Sets a Public IP address
      VPCSecurityGroups: [ !GetAtt 'RDSInstanceSecurityGroup.GroupId' ]
Outputs:
  AdminPassword:
    Description: 'KMS encrypted value of Admin Password (Base64 encoded)'
    Export:
      Name: !Sub '${AWS::StackName}-AdminPassword'
    Value: !GetAtt 'EncryptedAdminPassword.encryptedValue'
  AdminUsername:
    Description:  Admin Username (Base64 encoded)
    Export:
      Name: !Sub '${AWS::StackName}-AdminUsername'
    Value: !Ref 'AdminUsername'
  Hostname:
    Description: 'Hostname of the RDS Instance'
    Export:
      Name: !Sub '${AWS::StackName}-Hostname'
    Value: !GetAtt 'RDSInstance.Endpoint.Address'
  Port:
    Description: 'Port that MySQL listens on the RDS Instance'
    Export:
      Name: !Sub '${AWS::StackName}-Port'
    Value: !GetAtt 'RDSInstance.Endpoint.Port'
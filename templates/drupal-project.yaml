AWSTemplateFormatVersion: '2010-09-09'
Description: 'A Drupal Project stack.'
Resources:
  ElasticBeanstalkApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: !Ref 'AWS::StackName'
      Description: !Sub '${AWS::StackName} Elastic Beanstalk Application'
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: ElasticBeanstalkApplication
    Properties:
      ArtifactStore:
        Location: !ImportValue 'cfn-region-ArtifactStore'
        Type: S3
      Name: !Ref 'AWS::StackName'
      RoleArn: !ImportValue 'CodePipelineRoleArn'
      # These 'Dummy' stages allow us to create a CodePipeline without having an environment to deploy to just yet.
      Stages:
        - Name: Source
          Actions:
            - ActionTypeId: {Category: 'Source', Owner: 'AWS', Provider: 'S3', Version: '1'}
              Configuration: {S3Bucket: dummybucket, S3ObjectKey: dummyobject.zip}
              InputArtifacts: []
              Name: 'dummy'
              OutputArtifacts:
                - {Name: 'dummyartifact'}
              RunOrder: 1
        - Name: Development
          Actions:
            - ActionTypeId: {Category: Deploy, Owner: AWS, Provider: CloudFormation, Version: '1'}
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: 'arn:aws:iam::{AWS::AccountId}:role/cloudformation-role'
                StackName: 'dummyapp'
                TemplateConfiguration: 'MyApp::asdf.json'
                TemplatePath: 'MyApp::a.json'
              InputArtifacts:
                - {Name: dummyartifact}
              Name: dummy
              OutputArtifacts: []
              RunOrder: 1
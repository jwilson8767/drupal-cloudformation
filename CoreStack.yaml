AWSTemplateFormatVersion: '2010-09-09'
Description: 'Provisions IAM roles and network resources needed to provision other stacks in this Region. The stack must be named according to the format "cf-${region}"'
Outputs:
  RDSSubnetGroup:
    Description: 'RDS Subnet Group Id'
    Export:
      Name: !Sub 'cf-vpc-${AWS::Region}-RDSSubnetGroup'
    Value: !Ref 'RDSSubnetGroup'
  SubnetA:
    Description: 'Subnet ID of Subnet A'
    Export:
      Name: !Sub 'cf-vpc-${AWS::Region}-SubnetA'
    Value: !Ref 'SubnetA'
  SubnetB:
    Description: 'Subnet ID of Subnet B'
    Export:
      Name: !Sub 'cf-vpc-${AWS::Region}-SubnetB'
    Value: !Ref 'SubnetB'
  VpcId:
    Description: 'VpcId'
    Export:
      Name: !Sub 'cf-vpc-${AWS::Region}-VpcId'
    Value: !Ref 'VPC'
Resources:
  PublicRoute:
    DependsOn: 'VPCInternetGateway'
    Properties:
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref 'VPCInternetGateway'
      RouteTableId: !Ref 'PublicRouteTable'
    Type: 'AWS::EC2::Route'
  PublicRouteTable:
    DependsOn: 'VPC'
    Properties:
      Tags:
      - Key: 'Application'
        Value: !Ref 'AWS::StackId'
      - {Key: Network, Value: Public}
      VpcId: !Ref 'VPC'
    Type: 'AWS::EC2::RouteTable'
  PublicSubnetRouteTableAssociationSubnetA:
    DependsOn: [VPCInternetGateway, SubnetA]
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      SubnetId: !Ref 'SubnetA'
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  PublicSubnetRouteTableAssociationSubnetB:
    DependsOn: [VPCInternetGateway, SubnetB]
    Properties:
      RouteTableId: !Ref 'PublicRouteTable'
      SubnetId: !Ref 'SubnetB'
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
  RDSSubnetGroup:
    DependsOn: ['SubnetA', 'SubnetB']
    Properties:
      DBSubnetGroupDescription: 'default'
      SubnetIds:
      - !Ref 'SubnetA'
      - !Ref 'SubnetB'
      Tags: []
    Type: 'AWS::RDS::DBSubnetGroup'
  SubnetA:
    DependsOn: 'VPC'
    Properties:
      AvailabilityZone: !Sub '${AWS::Region}a'
      CidrBlock: '172.17.1.0/24'
      MapPublicIpOnLaunch: 'false'
      VpcId: !Ref 'VPC'
    Type: 'AWS::EC2::Subnet'
  SubnetB:
    DependsOn: 'VPC'
    Properties:
      AvailabilityZone: !Sub '${AWS::Region}b'
      CidrBlock: '172.17.2.0/24'
      MapPublicIpOnLaunch: 'false'
      VpcId: !Ref 'VPC'
    Type: 'AWS::EC2::Subnet'
  VPC:
    Properties:
      CidrBlock: '172.17.0.0/16'
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
      - Key: 'Name'
        Value: !Ref 'AWS::StackName'
    Type: 'AWS::EC2::VPC'
  VPCInternetGateway:
    DependsOn: 'VPC'
    Properties: {}
    Type: 'AWS::EC2::InternetGateway'
  VPCInternetGatewayAttachment:
    DependsOn: ['VPCInternetGateway', 'VPC']
    Properties:
      InternetGatewayId: !Ref 'VPCInternetGateway'
      VpcId: !Ref 'VPC'
    Type: 'AWS::EC2::VPCGatewayAttachment'

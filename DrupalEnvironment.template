//TODO Invoke Lambda function to add branch/environment to codepipeline
//TODO Re-organize parameter groups/labels
{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "A Drupal Environment",
  "Metadata" : {
    "AWS::CloudFormation::Interface" : {
      "ParameterGroups" : [
        {
          "Label" : {"default" : "General Configuration"},
          "Parameters" : [
            "DrupalApplicationStack",
            "MySQLInstanceStack",
            "AssetStoreStack"
          ]
        },
        {
          "Label" : {"default" : "Deployment Configuration"},
          "Parameters" : [
            "GitRepository",
            "GitBranch",
            "KeyPair"
          ]
        },
        {
          "Label" : {"default" : "Advanced Configuration"},
          "Parameters" : [
            "InstanceType",
            "SolutionStackName"
          ]
        }
      ],
      "ParameterLabels" : {
        "DrupalApplicationStack" : "Drupal Application Stack",
        "MySQLInstanceStack" : "MySQL Instance Stack",
        "AssetStoreStack" : "Asset Store Stack",
        "GitRepository" : "Git Repository",
        "GitBranch" : "Git Branch",
        "KeyPair" : "EC2 KeyPair",
        "InstanceType" : "Instance Type",
        "SolutionStackName" : "Solution StackName"
      }
    }
  },
  "Parameters" : {
    "DrupalApplicationStack" : {
      "Type" : "String",
      "Description" : "The Drupal Application stack name to use for this environment",
      "MinLength" : 1,
      "MaxLength" : 255,
      "AllowedPattern" : "^[a-zA-Z][-a-zA-Z0-9]*$"
    },
    "AssetStoreStack" : {
      "Type" : "String",
      "Description" : "Asset Store Stack to use for this environment.",
      "MinLength" : 1,
      "MaxLength" : 255,
      "AllowedPattern" : "^[a-zA-Z][-a-zA-Z0-9]*$",
      "Default" : "drupal-app-assets"
    },
    "GitRepository" : {
      "Type" : "String",
      "Description" : "The Github Repository to pull from. For example 'nemac/cohesivefire.nemac.org'"
    },
    "GitBranch" : {
      "Type" : "String",
      "Description" : "The Github Repository to pull from. For example 'nemac/cohesivefire.nemac.org'"
    },
    "KeyPair" : {
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "Description" : "The KeyPair to be used for SSH access to machines. Leave blank for greater security."
    },
    "InstanceType" : {
      "Type" : "String",
      "Default" : "t2.nano",
      "AllowedValues" : ["t2.nano", "t2.micro", "t2.small", "t2.medium"],
      "Description" : "Enter t2.nano, t2.micro, t2.small, or t2.medium. Default is t2.nano."
    },
    "SolutionStackName" : {
      "Type" : "String",
      "Default" : "64bit Amazon Linux 2016.09 v2.3.0 running PHP 7.0",
      "Description" : "The ElasticBeanstalk Solution Stack to use for this environment. Use `aws elasticbeanstalk list-available-solution-stacks | grep PHP` to see valid options"
    },
    "MySQLInstanceStack" : {
      "Type" : "String",
      "Description" : "The MySQL Instance stack name to use for this environment",
      "MinLength" : 1,
      "MaxLength" : 255,
      "AllowedPattern" : "^[a-zA-Z][-a-zA-Z0-9]*$",
      "Default" : "drupal-app-mysql56"
    },
    "DatabaseName" : {
      "Type" : "String",
      "Description" : "Leave blank to use this stack's name. If database with this name already exists it will be used instead of creating a new database."
    },
    "RetainDatabase" : {
      "Type" : "Boolean",
      "Default" : false,
      "Description" : "Keep the database when this environment is deleted."
    },
    "CloneDatabaseSourceDatabaseName" : {
      "Type" : "String",
      "Description" : "Clone this environment's database from another MySQL database. (Must specify CloneDatabaseSourceMySQLInstance)",
      "MaxLength" : 64
    },
    "CloneDatabaseSourceMySQLInstance" : {
      "Type" : "String",
      "Description" : "MySQL Instance Stack to clone Database from.",
      "MaxLength" : 255,
      "AllowedPattern" : "(^[a-zA-Z][-a-zA-Z0-9]*$|^$)"
    }
  },
  "Resources" : {
    "MySQLDatabase" : {
      "Type" : "AWS::CloudFormation::CustomResource",
      "Version" : "1.0",
      "Properties" : {
        "ServiceToken" : "This lambda function's ARN",
        "KMSKeyARN" : "",
        "Hostname" : {"Fn::ImportValue" : [{"Fn::Sub" : "${MySQLInstanceStack}-Hostname"}]},
        "Port" : {"Fn::ImportValue" : [{"Fn::Sub" : "${MySQLInstanceStack}-Port"}]},
        "AdminUsername" : {"Fn::ImportValue" : [{"Fn::Sub" : "${MySQLInstanceStack}-AdminUsername"}]},
        "AdminPassword" : {"Fn::ImportValue" : [{"Fn::Sub" : "${MySQLInstanceStack}-AdminPassword"}]},
        "Database" : {"Fn::If" : [{"Ref" : "DatabaseName"}, {"Ref" : "DatabaseName"}, {"Ref" : "AWS::StackName"}]},
        "RetainDatabase" : {"Ref" : "RetainDatabase"},
        "CloneSourceDatabaseName" : {"Fn::ImportValue" : [{"Ref" : "CloneDatabaseSourceDatabaseName"}]},
        "CloneSourceHostname" : {"Fn::ImportValue" : [{"Fn::Sub" : "${CloneDatabaseSourceMySQLInstance}-Hostname"}]},
        "CloneSourcePort" : {"Fn::ImportValue" : [{"Fn::Sub" : "${CloneDatabaseSourceMySQLInstance}-Port"}]},
        "CloneSourceAdminUsername" : {"Fn::ImportValue" : [{"Fn::Sub" : "${CloneDatabaseSourceMySQLInstance}-AdminUsername"}]},
        "CloneSourceAdminPassword" : {"Fn::ImportValue" : [{"Fn::Sub" : "${CloneDatabaseSourceMySQLInstance}-AdminPassword"}]}
      }
    },
    "EC2Role" : {
      "Type" : "AWS::IAM::Role",
      "Properties" : {
        "AssumeRolePolicyDocument" : {
          "Version" : "2012-10-17",
          "Statement" : [
            {
              "Effect" : "Allow",
              "Principal" : {
                "Service" : ["ec2.amazonaws.com"]
              },
              "Action" : ["sts:AssumeRole"]
            }
          ]
        },
        "Path" : "/",
        "Policies" : [
          {
            "PolicyName" : {"Fn::Sub" : "${DrupalApplicationStack}-${AWS::StackName}-ec2-role"},
            "PolicyDocument" : {
              "Version" : "2012-10-17",
              "Statement" : [
                {
                  "Sid" : "BucketAccess",
                  "Action" : [
                    "s3:Get*",
                    "s3:List*",
                    "s3:PutObject"
                  ],
                  "Effect" : "Allow",
                  "Resource" : [
                    "arn:aws:s3:::elasticbeanstalk-*",
                    "arn:aws:s3:::elasticbeanstalk-*/*"
                  ]
                },
                {
                  "Sid" : "XRayAccess",
                  "Action" : [
                    "xray:PutTraceSegments",
                    "xray:PutTelemetryRecords"
                  ],
                  "Effect" : "Allow",
                  "Resource" : "*"
                },
                {
                  "Sid" : "CloudWatchLogsAccess",
                  "Action" : [
                    "logs:PutLogEvents",
                    "logs:CreateLogStream"
                  ],
                  "Effect" : "Allow",
                  "Resource" : [
                    "arn:aws:logs:*:*:log-group:/aws/elasticbeanstalk*"
                  ]
                }, {
                  "Version" : "2012-10-17",
                  "Statement" : [
                    {
                      "Sid" : "ECSAccess",
                      "Effect" : "Allow",
                      "Action" : [
                        "ecs:Poll",
                        "ecs:StartTask",
                        "ecs:StopTask",
                        "ecs:DiscoverPollEndpoint",
                        "ecs:StartTelemetrySession",
                        "ecs:RegisterContainerInstance",
                        "ecs:DeregisterContainerInstance",
                        "ecs:DescribeContainerInstances",
                        "ecs:Submit*",
                        "ecs:DescribeTasks"
                      ],
                      "Resource" : "*"
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "EC2InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Allows EC2 instances to connect serve content over ports 80 and 443",
        "VpcId" : {"Fn::ImportValue" : [{"Fn::Sub" : "cf-vpc-${AWS::Region}-VpcId"}]},
        "SecurityGroupIngress" : [
          {"ProtocolIp" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIP" : "0.0.0.0/0"},
          {"ProtocolIp" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIP" : "0.0.0.0/0"}
        ],
        "SecurityGroupEgress" : [{"ProtocolIp" : "tcp", "FromPort" : "0", "ToPort" : "65535", "CidrIP" : "0.0.0.0/0"}]
      }
    },
    "EC2InstanceProfile" : {
      "Type" : "AWS::IAM::InstanceProfile",
      "Properties" : {
        "Path" : "/",
        "Roles" : [{"Ref" : "EC2Role"}]
      }
    },
    "DevelopmentConfigurationTemplate" : {
      "Type" : "AWS::ElasticBeanstalk::ConfigurationTemplate",
      "Properties" : {
        "ApplicationName" : {"Ref" : "DrupalApplicationStack"},
        "Description" : "",
        "OptionSettings" : [
          {
            "Namespace" : "aws:autoscaling:asg",
            "OptionName" : "MinSize",
            "Value" : "1"
          },
          {
            "Namespace" : "aws:autoscaling:asg",
            "OptionName" : "MaxSize",
            "Value" : "1"
          },
          {
            "Namespace" : "aws:elasticbeanstalk:environment",
            "OptionName" : "EnvironmentType",
            "Value" : "LoadBalanced"
          }
        ],
        "SolutionStackName" : {"Ref" : "SolutionStackName"}
      }
    },
    "ElasticBeanstalkEnvironment" : {
      "Type" : "AWS::ElasticBeanstalk::Environment",
      "Properties" : {
        "ApplicationName" : {"Ref" : "DrupalApplicationStack"},
        "EnvironmentName" : {"Ref" : "AWS::StackName"},
        "Description" : {"Fn::Sub" : "An environment for ${DrupalApplicationStack}"},
        "TemplateName" : {"Ref" : "DevelopmentConfigurationTemplate"}
      }
    }
  }
}